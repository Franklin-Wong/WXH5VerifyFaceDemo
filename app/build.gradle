apply plugin: 'com.android.application'

android {
    compileSdkVersion 30

    signingConfigs {
        release {

        }
    }

    defaultConfig {
        applicationId "com.integration.gonghuibao"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode getVersionCode()
        versionName getVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            resValue("string", "app_name", "WXPayDemo")
            buildConfigField("boolean", "LOG_DEBUG", "false")
            buildConfigField "boolean", "BETA", "false"
            shrinkResources false
            zipAlignEnabled true
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            resValue("string", "app_name", "工惠宝内测")
            buildConfigField("boolean", "LOG_DEBUG", "true")
            buildConfigField "boolean", "BETA", "false"
            shrinkResources false
            minifyEnabled false
        }
    }

    useLibrary 'org.apache.http.legacy'
    configurations {
        all*.exclude group: 'com.google.code.gson'
        all*.exclude group: 'com.squareup.okio'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':network')

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'io.reactivex:rxjava:1.1.1'
    implementation 'io.reactivex:rxandroid:1.1.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation 'com.squareup.okio:okio:1.15.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.jakewharton:disklrucache:2.0.2'
    implementation 'com.facebook.stetho:stetho:1.3.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    implementation 'androidx.multidex:multidex:2.0.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    implementation 'org.apache.httpcomponents:httpcore:4.4.10'
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.5.8'
    implementation 'com.joanzapata.pdfview:android-pdfview:1.0.4@aar'
    implementation files('libs/apache-mime4j-0.6.jar')
// 标准转换器,去掉 Retrofit以Mutipart上传参数时，String参数会多一对双引号
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'
}


def getVersionCode() {
    def versionSplit = getVersionName().split("\\.")
    println(versionSplit.toString())
    StringBuffer sb = new StringBuffer();
    for (item in versionSplit) {
        switch (item.length()) {
            case 1:
                sb.append('00');
                sb.append(item);
                break
            case 2:
                sb.append('0');
                sb.append(item);
                break
            case 3:
                sb.append(item);
                break
            default:
                throw new Exception("version name is error !")
                break
        }
    }
    return sb.toInteger()

}

def getVersionName() {
    def versionFile = file('version.properties')

    if (versionFile.exists()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['build.name'].toString()
        return versionCode
    } else {
        throw new Exception("Could not find version.properties!")
    }
}
